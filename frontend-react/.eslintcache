[{"/Users/mjtutkow/Projects/TodoTracker/frontend-react/src/index.js":"1","/Users/mjtutkow/Projects/TodoTracker/frontend-react/src/App.js":"2","/Users/mjtutkow/Projects/TodoTracker/frontend-react/src/reportWebVitals.js":"3","/Users/mjtutkow/Projects/TodoTracker/frontend-react/src/Tasks/Tasks.js":"4","/Users/mjtutkow/Projects/TodoTracker/frontend-react/src/Profile/Profile.js":"5","/Users/mjtutkow/Projects/TodoTracker/frontend-react/src/Profile/ProfileToolbarWidget.js":"6","/Users/mjtutkow/Projects/TodoTracker/frontend-react/src/auth/useAuth.js":"7","/Users/mjtutkow/Projects/TodoTracker/frontend-react/src/useWindowSize.js":"8"},{"size":595,"mtime":1612071327189,"results":"9","hashOfConfig":"10"},{"size":2365,"mtime":1621800121100,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1612070394031,"results":"12","hashOfConfig":"10"},{"size":3176,"mtime":1621800063469,"results":"13","hashOfConfig":"10"},{"size":1976,"mtime":1612128810292,"results":"14","hashOfConfig":"10"},{"size":1746,"mtime":1621799766437,"results":"15","hashOfConfig":"10"},{"size":362,"mtime":1621800221537,"results":"16","hashOfConfig":"10"},{"size":670,"mtime":1612116659142,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1p2w9qp",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/mjtutkow/Projects/TodoTracker/frontend-react/src/index.js",[],["36","37"],"/Users/mjtutkow/Projects/TodoTracker/frontend-react/src/App.js",[],"/Users/mjtutkow/Projects/TodoTracker/frontend-react/src/reportWebVitals.js",[],"/Users/mjtutkow/Projects/TodoTracker/frontend-react/src/Tasks/Tasks.js",["38"],"import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { ListItemSecondaryAction } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  verticalCenterContents: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  horizontalCenterContents: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  addTaskRow: {\n    display: 'flex',\n    padding: '5px',\n  },\n  addTaskRowText: {\n    flex: 1,\n  },\n}));\n\nfunction Tasks() {\n  const classes = useStyles();\n\n  const [areTasksLoading, setAreTasksLoading] = useState(false);\n  const [tasks, setTasks] = useState([\n    { name: 'Initial Task 001', complete: false },\n    { name: 'Initial Task 002', complete: true },\n  ]);\n\n  const [newTaskName, setNewTaskName] = useState('');\n\n  const onAddTask = () => {\n    if (newTaskName) {\n      setTasks([...tasks, { name: newTaskName, complete: false }]);\n      setNewTaskName('');\n    }\n  };\n\n  const onRemoveTask = (task) => setTasks(tasks.filter((t) => t !== task));\n\n  const onToggleTaskCompletion = (task) => {\n    task.complete = !task.complete;\n    setTasks([...tasks]);\n  };\n\n  if (areTasksLoading) {\n    return (\n      <div className={classes.verticalCenterContents}>\n        <div className={classes.horizontalCenterContents}>\n          <CircularProgress size=\"100px\" />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.addTaskRow}>\n        <TextField className={classes.addTaskRowText} label=\"New Task\" value={newTaskName} onChange={(event) => setNewTaskName(event.target.value)} />\n        <Button color=\"primary\" onClick={onAddTask}>Add</Button>\n      </div>\n      <Divider />\n      <List>\n        { tasks.map((task) =>\n          <ListItem key={task.name} button onClick={() => onToggleTaskCompletion(task)}>\n            <ListItemIcon>\n              { task.complete ? <CheckBoxIcon /> : <CheckBoxOutlineBlankIcon /> }\n            </ListItemIcon>\n            <ListItemText primary={task.name}/>\n            <ListItemSecondaryAction onClick={(event) => {onRemoveTask(task); event.stopPropagation()}}>\n              <IconButton edge=\"end\" aria-label=\"delete\">\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        )}\n      </List>\n    </div>\n  );\n}\n\nexport default Tasks;","/Users/mjtutkow/Projects/TodoTracker/frontend-react/src/Profile/Profile.js",[],"/Users/mjtutkow/Projects/TodoTracker/frontend-react/src/Profile/ProfileToolbarWidget.js",[],"/Users/mjtutkow/Projects/TodoTracker/frontend-react/src/auth/useAuth.js",[],"/Users/mjtutkow/Projects/TodoTracker/frontend-react/src/useWindowSize.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":45,"column":27,"nodeType":"45","messageId":"46","endLine":45,"endColumn":45},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'setAreTasksLoading' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]