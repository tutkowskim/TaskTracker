[{"/Users/mjtutkow/Projects/TodoTracker/src/index.js":"1","/Users/mjtutkow/Projects/TodoTracker/src/aws-exports.js":"2","/Users/mjtutkow/Projects/TodoTracker/src/App.js":"3","/Users/mjtutkow/Projects/TodoTracker/src/reportWebVitals.js":"4","/Users/mjtutkow/Projects/TodoTracker/src/auth/useAuth.js":"5","/Users/mjtutkow/Projects/TodoTracker/src/Tasks/Tasks.js":"6","/Users/mjtutkow/Projects/TodoTracker/src/Profile/Profile.js":"7","/Users/mjtutkow/Projects/TodoTracker/src/Profile/ProfileToolbarWidget.js":"8","/Users/mjtutkow/Projects/TodoTracker/src/useWindowSize.js":"9"},{"size":695,"mtime":1621802407566,"results":"10","hashOfConfig":"11"},{"size":469,"mtime":1621802493355,"results":"12","hashOfConfig":"11"},{"size":2484,"mtime":1621802407565,"results":"13","hashOfConfig":"11"},{"size":362,"mtime":1621802407567,"results":"14","hashOfConfig":"11"},{"size":362,"mtime":1621802407566,"results":"15","hashOfConfig":"11"},{"size":3176,"mtime":1621802407566,"results":"16","hashOfConfig":"11"},{"size":1976,"mtime":1621802407566,"results":"17","hashOfConfig":"11"},{"size":1746,"mtime":1621802407566,"results":"18","hashOfConfig":"11"},{"size":670,"mtime":1621802407567,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10jsa29",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/mjtutkow/Projects/TodoTracker/src/index.js",[],"/Users/mjtutkow/Projects/TodoTracker/src/aws-exports.js",[],"/Users/mjtutkow/Projects/TodoTracker/src/App.js",[],["40","41"],"/Users/mjtutkow/Projects/TodoTracker/src/reportWebVitals.js",[],"/Users/mjtutkow/Projects/TodoTracker/src/auth/useAuth.js",[],"/Users/mjtutkow/Projects/TodoTracker/src/Tasks/Tasks.js",["42"],"import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { ListItemSecondaryAction } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  verticalCenterContents: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  horizontalCenterContents: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  addTaskRow: {\n    display: 'flex',\n    padding: '5px',\n  },\n  addTaskRowText: {\n    flex: 1,\n  },\n}));\n\nfunction Tasks() {\n  const classes = useStyles();\n\n  const [areTasksLoading, setAreTasksLoading] = useState(false);\n  const [tasks, setTasks] = useState([\n    { name: 'Initial Task 001', complete: false },\n    { name: 'Initial Task 002', complete: true },\n  ]);\n\n  const [newTaskName, setNewTaskName] = useState('');\n\n  const onAddTask = () => {\n    if (newTaskName) {\n      setTasks([...tasks, { name: newTaskName, complete: false }]);\n      setNewTaskName('');\n    }\n  };\n\n  const onRemoveTask = (task) => setTasks(tasks.filter((t) => t !== task));\n\n  const onToggleTaskCompletion = (task) => {\n    task.complete = !task.complete;\n    setTasks([...tasks]);\n  };\n\n  if (areTasksLoading) {\n    return (\n      <div className={classes.verticalCenterContents}>\n        <div className={classes.horizontalCenterContents}>\n          <CircularProgress size=\"100px\" />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.addTaskRow}>\n        <TextField className={classes.addTaskRowText} label=\"New Task\" value={newTaskName} onChange={(event) => setNewTaskName(event.target.value)} />\n        <Button color=\"primary\" onClick={onAddTask}>Add</Button>\n      </div>\n      <Divider />\n      <List>\n        { tasks.map((task) =>\n          <ListItem key={task.name} button onClick={() => onToggleTaskCompletion(task)}>\n            <ListItemIcon>\n              { task.complete ? <CheckBoxIcon /> : <CheckBoxOutlineBlankIcon /> }\n            </ListItemIcon>\n            <ListItemText primary={task.name}/>\n            <ListItemSecondaryAction onClick={(event) => {onRemoveTask(task); event.stopPropagation()}}>\n              <IconButton edge=\"end\" aria-label=\"delete\">\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        )}\n      </List>\n    </div>\n  );\n}\n\nexport default Tasks;","/Users/mjtutkow/Projects/TodoTracker/src/Profile/Profile.js",[],"/Users/mjtutkow/Projects/TodoTracker/src/Profile/ProfileToolbarWidget.js",[],"/Users/mjtutkow/Projects/TodoTracker/src/useWindowSize.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":45,"column":27,"nodeType":"49","messageId":"50","endLine":45,"endColumn":45},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'setAreTasksLoading' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]